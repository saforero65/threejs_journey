{"version":3,"mappings":"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","names":["projectsData","projectsGrid","loading","noResults","searchInput","difficultySelect","navButtons","modal","projectCount","currentCategory","currentDifficulty","currentSearch","init","projects","__vitePreload","initBackground","displayProjects","setupEventListeners","error","canvas","scene","THREE.Scene","camera","THREE.PerspectiveCamera","renderer","THREE.WebGLRenderer","particlesGeometry","THREE.BufferGeometry","particlesCount","positions","i","THREE.BufferAttribute","particlesMaterial","THREE.PointsMaterial","particles","THREE.Points","animate","project","projectCard","createProjectCard","card","difficultyStars","e","showProjectModal","modalTitle","modalCategory","modalDifficulty","modalDescription","modalViewBtn","modalFullscreenBtn","modalInfoBtn","infoText","filterProjects","filtered","btn","b","projectFolder","instructions","commands"],"ignoreList":[],"sources":["../../src/script.js"],"sourcesContent":["import * as THREE from \"three\";\nimport \"./style.css\";\n\n// Importar datos de proyectos (se generará automáticamente)\nlet projectsData = [];\n\n// Elementos del DOM\nconst projectsGrid = document.getElementById(\"projects-grid\");\nconst loading = document.getElementById(\"loading\");\nconst noResults = document.getElementById(\"no-results\");\nconst searchInput = document.getElementById(\"search-input\");\nconst difficultySelect = document.getElementById(\"difficulty-select\");\nconst navButtons = document.querySelectorAll(\".nav-btn\");\nconst modal = document.getElementById(\"project-modal\");\nconst projectCount = document.getElementById(\"project-count\");\n\n// Estado de la aplicación\nlet currentCategory = \"all\";\nlet currentDifficulty = \"\";\nlet currentSearch = \"\";\n\n// Inicializar la aplicación\nasync function init() {\n  try {\n    // Cargar datos de proyectos\n    const { projects } = await import(\"./data/projects.js\");\n    projectsData = projects;\n\n    // Inicializar background 3D\n    initBackground();\n\n    // Mostrar proyectos\n    displayProjects(projectsData);\n\n    // Actualizar contador\n    projectCount.textContent = projectsData.length;\n\n    // Ocultar loading\n    loading.style.display = \"none\";\n\n    // Configurar eventos\n    setupEventListeners();\n  } catch (error) {\n    console.error(\"Error loading projects:\", error);\n    loading.innerHTML =\n      \"<p>Error cargando proyectos. Asegúrate de haber ejecutado el build.</p>\";\n  }\n}\n\n// Configurar Three.js background\nfunction initBackground() {\n  const canvas = document.getElementById(\"background-canvas\");\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  );\n  const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n  // Crear geometría de partículas\n  const particlesGeometry = new THREE.BufferGeometry();\n  const particlesCount = 1000;\n  const positions = new Float32Array(particlesCount * 3);\n\n  for (let i = 0; i < particlesCount * 3; i++) {\n    positions[i] = (Math.random() - 0.5) * 10;\n  }\n\n  particlesGeometry.setAttribute(\n    \"position\",\n    new THREE.BufferAttribute(positions, 3)\n  );\n\n  // Material de partículas\n  const particlesMaterial = new THREE.PointsMaterial({\n    color: \"#667eea\",\n    size: 0.02,\n    transparent: true,\n    opacity: 0.6,\n  });\n\n  // Crear partículas\n  const particles = new THREE.Points(particlesGeometry, particlesMaterial);\n  scene.add(particles);\n\n  camera.position.z = 3;\n\n  // Animación\n  function animate() {\n    requestAnimationFrame(animate);\n\n    particles.rotation.x += 0.0005;\n    particles.rotation.y += 0.0005;\n\n    renderer.render(scene, camera);\n  }\n\n  animate();\n\n  // Redimensionar\n  window.addEventListener(\"resize\", () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  });\n}\n\n// Mostrar proyectos en la grid\nfunction displayProjects(projects) {\n  projectsGrid.innerHTML = \"\";\n\n  if (projects.length === 0) {\n    noResults.style.display = \"block\";\n    return;\n  }\n\n  noResults.style.display = \"none\";\n\n  projects.forEach((project) => {\n    const projectCard = createProjectCard(project);\n    projectsGrid.appendChild(projectCard);\n  });\n}\n\n// Crear tarjeta de proyecto\nfunction createProjectCard(project) {\n  const card = document.createElement(\"div\");\n  card.className = \"project-card\";\n  card.setAttribute(\"data-project\", JSON.stringify(project));\n\n  const difficultyStars = \"⭐\".repeat(project.difficulty);\n\n  card.innerHTML = `\n        <img src=\"./thumbnails/${project.thumbnail}\" alt=\"${project.name}\" class=\"project-thumbnail\" loading=\"lazy\">\n        <div class=\"project-info\">\n            <div class=\"project-header\">\n                <h3 class=\"project-title\">${project.name}</h3>\n                <span class=\"category-badge ${project.category}\">${project.category}</span>\n            </div>\n            <p class=\"project-description\">${project.description}</p>\n            <div class=\"project-footer\">\n                <span class=\"difficulty-badge\">${difficultyStars}</span>\n                <button class=\"view-project-btn\" onclick=\"openProject('${project.folder}')\">Ver Proyecto</button>\n            </div>\n        </div>\n    `;\n\n  // Evento click para modal\n  card.addEventListener(\"click\", (e) => {\n    if (!e.target.classList.contains(\"view-project-btn\")) {\n      showProjectModal(project);\n    }\n  });\n\n  return card;\n}\n\n// Mostrar modal de proyecto\nfunction showProjectModal(project) {\n  const modalTitle = document.getElementById(\"modal-title\");\n  const modalCategory = document.getElementById(\"modal-category\");\n  const modalDifficulty = document.getElementById(\"modal-difficulty\");\n  const modalDescription = document.getElementById(\"modal-description\");\n  const modalViewBtn = document.getElementById(\"modal-view-btn\");\n  const modalFullscreenBtn = document.getElementById(\"modal-fullscreen-btn\");\n\n  modalTitle.textContent = project.name;\n  modalCategory.textContent = project.category;\n  modalCategory.className = `category-badge ${project.category}`;\n  modalDifficulty.textContent = \"⭐\".repeat(project.difficulty);\n  modalDescription.textContent = project.description;\n  // Configurar botones\n  modalViewBtn.onclick = () => openProject(project.folder);\n  modalFullscreenBtn.onclick = () => {\n    openProject(project.folder);\n    modal.classList.remove('active');\n  };\n\n  // Botón info\n  const modalInfoBtn = document.getElementById(\"modal-info-btn\");\n  modalInfoBtn.onclick = () => {\n    const infoText = `🎯 Proyecto: ${project.name}\n📂 Carpeta: ${project.folder}\n📚 Categoría: ${project.category}\n⭐ Dificultad: ${\"⭐\".repeat(project.difficulty)}\n\n📁 Para ejecutar este proyecto:\n1. cd ${project.folder}\n2. npm install\n3. npm run dev\n\n🌐 Para compilar desde el showcase:\nnpm run build-project ${project.folder}\n\n💡 Los archivos fuente están en la carpeta 'src/'\n🚀 Los archivos compilados van a la carpeta 'dist/'`;\n    alert(infoText);\n  };\n\n  modal.classList.add(\"active\");\n}\n\n// Filtrar proyectos\nfunction filterProjects() {\n  let filtered = projectsData;\n\n  // Filtrar por categoría\n  if (currentCategory !== \"all\") {\n    filtered = filtered.filter(\n      (project) => project.category === currentCategory\n    );\n  }\n\n  // Filtrar por dificultad\n  if (currentDifficulty) {\n    filtered = filtered.filter(\n      (project) => project.difficulty === parseInt(currentDifficulty)\n    );\n  }\n\n  // Filtrar por búsqueda\n  if (currentSearch) {\n    filtered = filtered.filter(\n      (project) =>\n        project.name.toLowerCase().includes(currentSearch.toLowerCase()) ||\n        project.description\n          .toLowerCase()\n          .includes(currentSearch.toLowerCase()) ||\n        project.category.toLowerCase().includes(currentSearch.toLowerCase())\n    );\n  }\n\n  displayProjects(filtered);\n}\n\n// Configurar event listeners\nfunction setupEventListeners() {\n  // Navegación por categorías\n  navButtons.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      navButtons.forEach((b) => b.classList.remove(\"active\"));\n      btn.classList.add(\"active\");\n      currentCategory = btn.getAttribute(\"data-category\");\n      filterProjects();\n    });\n  });\n\n  // Búsqueda\n  searchInput.addEventListener(\"input\", (e) => {\n    currentSearch = e.target.value;\n    filterProjects();\n  });\n\n  // Filtro de dificultad\n  difficultySelect.addEventListener(\"change\", (e) => {\n    currentDifficulty = e.target.value;\n    filterProjects();\n  });\n\n  // Cerrar modal\n  const modalClose = document.querySelector(\".modal-close\");\n  modalClose.addEventListener(\"click\", () => {\n    modal.classList.remove(\"active\");\n  });\n\n  modal.addEventListener(\"click\", (e) => {\n    if (e.target === modal) {\n      modal.classList.remove(\"active\");\n    }\n  });\n\n  // Tecla ESC para cerrar modal\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Escape\" && modal.classList.contains(\"active\")) {\n      modal.classList.remove(\"active\");\n    }\n  });\n\n  // Activar primer botón de navegación\n  document\n    .querySelector('.nav-btn[data-category=\"all\"]')\n    .classList.add(\"active\");\n}\n\n// Función para abrir proyectos\nwindow.openProject = function(projectFolder) {\n  // Crear una ventana emergente para mostrar instrucciones\n  const instructions = `🚀 Para abrir el proyecto \"${projectFolder}\":\n\n1️⃣ Abre una nueva terminal\n2️⃣ Ejecuta estos comandos:\n\n   cd ${projectFolder}\n   npm install\n   npm run dev\n\n3️⃣ El proyecto se abrirá automáticamente en tu navegador\n\n💡 Cada proyecto de Three.js Journey funciona de forma independiente\n   con su propio servidor de desarrollo.\n\n¿Quieres que copiemos los comandos al portapapeles?`;\n\n  if (confirm(instructions + '\\n\\n¿Copiar comandos al portapapeles?')) {\n    const commands = `cd ${projectFolder}\\nnpm install\\nnpm run dev`;\n    navigator.clipboard.writeText(commands).then(() => {\n      alert('✅ Comandos copiados al portapapeles!\\n\\nPega y ejecuta en tu terminal.');\n    }).catch(() => {\n      // Fallback si no se puede copiar al portapapeles\n      prompt('Copia estos comandos:', commands);\n    });\n  }\n}\n\n// Inicializar cuando el DOM esté listo\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],"file":"assets/index-BaTBCoX8.js"}